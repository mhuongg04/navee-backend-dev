generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(cuid())
  created_at      DateTime         @default(now())
  updated_at      DateTime         @updatedAt
  email           String           @unique
  firstname       String
  lastname        String?
  role            Role             @default(user)
  password        String
  earnpoints      Int              @default(0)
  enrollments     Enrollment[]
  exerciseResults ExerciseResult[]
}

enum Role {
  user
  teacher
  admin
}

model Topic {
  id          String        @id @default(cuid())
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  topic_name  String
  description String?
  image       String?
  level       Level         @default(starter)
  LessonTopic LessonTopic[]
  Vocab       Vocab[]
  Enrollment  Enrollment[]
  Game        Game[]
}

enum Level {
  starter
  mover
  flyer
  pre_ielts
}

model Lesson {
  id          String        @id @default(cuid())
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  title       String
  description String?
  image       String?
  mp3         String
  part        Int
  LessonTopic LessonTopic[]
  exercises   Exercise[]
}

model LessonTopic {
  id              String           @id @default(cuid())
  topic_id        String
  lesson_id       String
  topic           Topic            @relation(fields: [topic_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  lesson          Lesson           @relation(fields: [lesson_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Vocab           Vocab[]
  Enrollment      Enrollment[]
  Game            Game[]
  lessonProgress  LessonProgress[]
}

model Vocab {
  id          String       @id @default(cuid())
  category    String
  english     String
  vietnamese  String
  description String?
  lesson_id   String?
  topic_id    String?
  lesson      LessonTopic? @relation(fields: [lesson_id], references: [id])
  topic       Topic?       @relation(fields: [topic_id], references: [id])
  GameVocab   GameVocab[]
}

model Enrollment {
  id              String           @id @default(cuid())
  created_at      DateTime         @default(now())
  topic_id        String
  current         String
  user_id         String
  completed       Boolean          @default(false)
  progress        Float            @default(0)
  topic           Topic            @relation(fields: [topic_id], references: [id])
  lesson          LessonTopic      @relation(fields: [current], references: [id])
  user            User             @relation(fields: [user_id], references: [id])
  lessonProgress  LessonProgress[]
}

model LessonProgress {
  id            String      @id @default(cuid())
  enrollment_id String
  lesson_id     String
  completed     Boolean     @default(false)
  enrollment    Enrollment  @relation(fields: [enrollment_id], references: [id], onDelete: Cascade)
  lesson        LessonTopic @relation(fields: [lesson_id], references: [id], onDelete: Cascade)

  @@unique([enrollment_id, lesson_id])
}

model Game {
  id        String       @id @default(cuid())
  topic_id  String?
  lesson_id String?
  topic     Topic?       @relation(fields: [topic_id], references: [id])
  lesson    LessonTopic? @relation(fields: [lesson_id], references: [id])
  GameVocab GameVocab[]
}

model GameVocab {
  id       String @id @default(cuid())
  vocab_id String
  hint     String
  game_id  String
  game     Game   @relation(fields: [game_id], references: [id])
  vocab    Vocab  @relation(fields: [vocab_id], references: [id])
}

model Exercise {
  id             String           @id @default(cuid())
  question       String
  answer         String
  point          Int              
  lesson_id      String
  lesson         Lesson           @relation(fields: [lesson_id], references: [id])
  exerciseResults ExerciseResult[]
}

model ExerciseResult {
  id          String   @id @default(cuid())
  created_at  DateTime @default(now())
  user_id     String
  exercise_id String
  score       Int
  completed   Boolean  @default(false)
  user        User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  exercise    Exercise @relation(fields: [exercise_id], references: [id], onDelete: Cascade)

  @@unique([user_id, exercise_id])
}
